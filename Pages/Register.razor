@page "/register"
@using CrushApp.Data.DTOs
@using CrushApp.Data.Services
@inject IUserService UserService

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card shadow-lg border-0 rounded-4">
                <div class="card-body">
                    <h3 class="card-title text-center mb-4">‚ú® Create Your Account</h3>

                    <EditForm Model="@newUser" OnValidSubmit="HandleRegister">
                        <DataAnnotationsValidator />
                        <ValidationSummary />

                        <div class="form-group mb-3">
                            <label>Username</label>
                            <InputText @bind-Value="newUser.Username" class="form-control" placeholder="Enter username" />
                        </div>

                        <div class="form-group mb-3">
                            <label>Email</label>
                            <InputText @bind-Value="newUser.Email" class="form-control" placeholder="Enter email" />
                        </div>

                        <div class="form-group mb-4">
                            <label>Password</label>
                            <InputText @bind-Value="newUser.Password" type="password" class="form-control" placeholder="Create password" />
                        </div>

                        <button type="submit" class="btn btn-primary w-100">Register</button>
                    </EditForm>

                    @if (!string.IsNullOrEmpty(status))
                    {
                        <div class="alert mt-3 @(status.Contains("User created") ? "alert-success" : "alert-danger")">
                            @status
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private UserCreateDto newUser = new();
    private string status = "";

    private async Task HandleRegister()
    {
        var result = await UserService.RegisterUserAsync(newUser);
        status = result is not null ? "üéâ User created successfully!" : "‚ùå Failed to create user. Try again.";
    }
}
